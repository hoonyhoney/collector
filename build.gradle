plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply {
    plugin 'io.spring.dependency-management'
}

group = 'team.three'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // crawling - jsoup
    implementation 'org.jsoup:jsoup:1.16.1'
    // crawling - selenium
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.14.1'

    //db
    runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'

    //TODO 배포시 제거 필요(jpa sql 보는 용도. 개발시에만 사용)
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

    //swagger address : {ip:port}/swagger-ui/index.html
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

// queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

jar {
    enabled = false
}